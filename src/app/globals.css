@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
    --background: #ffffff;
    --foreground: #171717;
    --logocolor: #1f2937; /* gray-800 */

    --btnbg: 243, 244, 246; /* gray-100 */
    --btncolor: 3, 7, 18; /* gray-950 */
    --btnborder: 229, 231, 235; /* gray-200 */
    --btnhoverbg: 63, 63, 70; /* zinc-700 */
    --btnhovercolor: 255, 255, 255;
    --btnactivebg: 243, 244, 246; /* gray-100 */
    --btnactivecolor: 3, 7, 18; /* gray-950 */
}

@media (prefers-color-scheme: dark) {
    :root {
        --background: #0a0a0a;
        --foreground: #ededed;
        --logocolor: #e5e7eb;

        --btnbg: 3, 7, 18; /* gray-950 */
        --btncolor: 156, 163, 175; /* gray-400 */
        --btnborder: 0, 0, 0;
        --btnhoverbg: 156, 163, 175; /* gray-400 */
        --btnhovercolor: 0, 0, 0;
        --btnactivebg: 3, 7, 18; /* gray-950 */
        --btnactivecolor: 243, 244, 246; /* gray-100 */
    }
}

html {
    overflow-y: scroll; /* Always show the vertical scrollbar (to prevent the navbar from shifting after a route change) */
}

body {
    color: var(--foreground);
    background: var(--background);
    font-family: Arial, Helvetica, sans-serif;
}

::selection {
    background-color: #b3d4fc;
    color: #000; /* black text */
}

@layer utilities {
    .text-balance {
        text-wrap: balance;
    }
}

a:not(.menu-item):not(.logo) {
    color: var(--foreground);
    font-weight: 600;
    text-decoration: none;
}

a:not(.menu-item):not(.logo):not(.nav-item):hover {
    text-decoration: underline;
}

@media (min-width: 1024px) {
    /* I'd like to use a 'fancy' hover effect that produces an animated line. Since this effect only really works if the link in 
        question does not wrap around a line break, we're imposing a 'white-space: nowrap' directive. However, this policy is 
        suboptimal for smaller screens, and so we reserve the effect for bigger ones. */
    a:not(.menu-item):not(.logo) {
        color: var(--foreground);
        font-weight: 600;
        text-decoration: none !important;
        position: relative;
        white-space: nowrap;
    }

    a:not(.nav-item):not(.menu-item):not(.logo):not(.philpapers-link)::after {
        content: '';
        position: absolute;
        width: 100%;
        height: 1px;
        bottom: 0;
        left: 0;
        background-color: var(--foreground);
        opacity: 0;
        transform: scaleX(0);
        transform-origin: bottom left;
        transition:
            transform 0.2s ease-out,
            opacity 0.2s ease-out;
    }

    a:not(.nav-item):not(.menu-item):not(.logo):not(.philpapers-link):hover::after {
        opacity: 1;
        transform: scaleX(1);
    }

    /* For the nav-items, we have to add a translation effect that connects the hover effect with the more permanent border-effect.
       (The latter is handled by a conditionally applied tailwind class in NavItemComp.) */
    a.nav-item:not(.menu-item):not(.logo)::after {
        content: '';
        position: absolute;
        width: 100%;
        height: 1px;
        bottom: 0;
        left: 0;
        background-color: var(--foreground);
        opacity: 0;
        transform: translateY(1px) scaleX(0);
        transform-origin: bottom left;
        transition:
            transform 0.2s ease-out,
            opacity 0.2s ease-out;
    }

    a.nav-item:not(.menu-item):not(.logo):hover::after {
        opacity: 1;
        transform: translateY(1px) scaleX(1);
    }
}

h2 {
    font-size: 1.25rem;
    font-weight: 600;
    letter-spacing: 0.01em;
    color: var(--foreground);
    margin-top: 1rem;
    margin-bottom: 1rem;
    padding-bottom: 0.5rem;
    width: 100%;
}

nav {
    background: var(--background);
}

.logo {
    color: var(--logocolor);
    font-size: 1.25rem;
    font-weight: 300;
    letter-spacing: 0.01em;
    white-space: nowrap;
}

.menu {
    -webkit-backdrop-filter: blur(10px); /* for Safari */
    backdrop-filter: blur(10px);
}

.philpapers-link {
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    will-change: transform, filter, opacity;
    border-radius: 4px;
    padding: 2px;
    opacity: 0.7;
}

.philpapers-link:hover {
    transform: scale(1.2) translateY(-2px);
    filter: brightness(1.1) saturate(1.2);
    opacity: 1;
}

/* Ensure the logo itself also has smooth transitions */
.philpapers-link svg {
    transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    will-change: transform, opacity;
}
